<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>interface on Technical Blog</title>
    <link>https://suchismita-deb.github.io/tags/interface/</link>
    <description>Recent content in interface on Technical Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 08 Jun 2025 00:29:31 +0530</lastBuildDate>
    <atom:link href="https://suchismita-deb.github.io/tags/interface/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Content</title>
      <link>https://suchismita-deb.github.io/post/content/</link>
      <pubDate>Sun, 08 Jun 2025 00:29:31 +0530</pubDate>
      <guid>https://suchismita-deb.github.io/post/content/</guid>
      <description>Java Topic Link Interview https://suchismita-deb.github.io/tags/interviewquestion/ Java https://suchismita-deb.github.io/tags/java/ Git https://suchismita-deb.github.io/tags/git/ Spring Topic Link Spring https://suchismita-deb.github.io/tags/spring/ Redis https://suchismita-deb.github.io/tags/redis/ Crud https://suchismita-deb.github.io/tags/crud/ Rest https://suchismita-deb.github.io/tags/rest/ JDBC https://suchismita-deb.github.io/tags/jdbc/ Spring Boot Course https://suchismita-deb.github.io/tags/springbootcourse/ Spring Security https://suchismita-deb.github.io/tags/spring-security/ System Design Topic Link Computer Network https://suchismita-deb.github.io/tags/computer-networks/ Design Pattern Topic Link DSA Topic Link Bit Manipulation https://suchismita-deb.github.io/tags/dsa/ Behavioral Interview Topic Link Behavioral Interview https://suchismita-deb.github.io/tags/behavoiral-interview/ Collection of Books. Book Name Link. System Design Handbook. Link OS Notes Link. Grokking the advanced System Design Interview.</description>
    </item>
    <item>
      <title>Functional Interface</title>
      <link>https://suchismita-deb.github.io/post/java/fundamental/FunctionalInterface/</link>
      <pubDate>Tue, 14 Nov 2023 18:26:08 +0530</pubDate>
      <guid>https://suchismita-deb.github.io/post/java/fundamental/FunctionalInterface/</guid>
      <description>Functional Interface has one method. SAM - Single Abstract Method.
We can only use lambdas for the functional interface. To specify the functional interface we can use the annotation @FunctionalInterface
@FunctionalInterface interface A{ void show(); // public abstract method. Only one method. } // If do not write the annotation then we can put more than one method. class B implements A{ @Override public void show() { System.out.println(&amp;#34;In show.&amp;#34;); } } public class F1 { public static void main(String[] args) { A funcInterface = new B(); A funcInterface1 = new A() { // We can instantiate the interface by defining the interface here.</description>
    </item>
  </channel>
</rss>
