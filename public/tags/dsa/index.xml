<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dsa on Technical Blog</title>
    <link>https://suchismita-deb.github.io/tags/dsa/</link>
    <description>Recent content in dsa on Technical Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Mar 2025 23:58:55 +0530</lastBuildDate>
    <atom:link href="https://suchismita-deb.github.io/tags/dsa/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Practice</title>
      <link>https://suchismita-deb.github.io/post/dsa/practice/</link>
      <pubDate>Sat, 08 Mar 2025 23:58:55 +0530</pubDate>
      <guid>https://suchismita-deb.github.io/post/dsa/practice/</guid>
      <description>Neetcode 150, Blind 75, SDE Sheet.
Array Two Sum. Majority Element. Contains Duplicate. Valid Anagram. Group Anagram. Top k frequent element. Encode and Decode String. Product of array except self. Valid Sudoku. Longest Consecutive Sequence. Insert Interval. Combination sum. Merge Interval. 4 sum. Sort Color. Set Matrix Zero. Pascal Triangle. Next Permutation. Kadane&amp;rsquo;s Algorithm. Sort an array 0, 1 and 2. Rotate Matrix. Merge Overlapping sub intervals. Merge two sorted array without extra space.</description>
    </item>
    <item>
      <title>Bit Manipulation</title>
      <link>https://suchismita-deb.github.io/post/dsa/bitManipulation/</link>
      <pubDate>Fri, 20 Dec 2024 18:08:41 +0530</pubDate>
      <guid>https://suchismita-deb.github.io/post/dsa/bitManipulation/</guid>
      <description>Number of set bits. public static void main(String[] args){ int x = 4; int setBit =0; while(x!=0){ setBit += x&amp;amp;1; // 1&amp;amp;1 is only one. x&amp;gt;&amp;gt;=1; // Moving the number to the right and checking the least bit one by one. } System.out.println(setBit); } We store and use the short, int, long datatype for the numbers. There is no binary datatype. We print binary number by Integer.toBinaryString(5) and we represent binary number in a variable like int num = 0b111.</description>
    </item>
  </channel>
</rss>
